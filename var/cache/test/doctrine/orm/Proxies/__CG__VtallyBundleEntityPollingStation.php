<?php

namespace Proxies\__CG__\VtallyBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class PollingStation extends \VtallyBundle\Entity\PollingStation implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'VtallyBundle\\Entity\\PollingStation' . "\0" . 'id', '' . "\0" . 'VtallyBundle\\Entity\\PollingStation' . "\0" . 'name', '' . "\0" . 'VtallyBundle\\Entity\\PollingStation' . "\0" . 'active', '' . "\0" . 'VtallyBundle\\Entity\\PollingStation' . "\0" . 'code', '' . "\0" . 'VtallyBundle\\Entity\\PollingStation' . "\0" . 'district', '' . "\0" . 'VtallyBundle\\Entity\\PollingStation' . "\0" . 'constituency', '' . "\0" . 'VtallyBundle\\Entity\\PollingStation' . "\0" . 'prNotifications', '' . "\0" . 'VtallyBundle\\Entity\\PollingStation' . "\0" . 'paNotifications', '' . "\0" . 'VtallyBundle\\Entity\\PollingStation' . "\0" . 'prVoteCasts', '' . "\0" . 'VtallyBundle\\Entity\\PollingStation' . "\0" . 'paVoteCasts', '' . "\0" . 'VtallyBundle\\Entity\\PollingStation' . "\0" . 'prPinkSheet', '' . "\0" . 'VtallyBundle\\Entity\\PollingStation' . "\0" . 'paPinkSheet', '' . "\0" . 'VtallyBundle\\Entity\\PollingStation' . "\0" . 'returningOfficer'];
        }

        return ['__isInitialized__', '' . "\0" . 'VtallyBundle\\Entity\\PollingStation' . "\0" . 'id', '' . "\0" . 'VtallyBundle\\Entity\\PollingStation' . "\0" . 'name', '' . "\0" . 'VtallyBundle\\Entity\\PollingStation' . "\0" . 'active', '' . "\0" . 'VtallyBundle\\Entity\\PollingStation' . "\0" . 'code', '' . "\0" . 'VtallyBundle\\Entity\\PollingStation' . "\0" . 'district', '' . "\0" . 'VtallyBundle\\Entity\\PollingStation' . "\0" . 'constituency', '' . "\0" . 'VtallyBundle\\Entity\\PollingStation' . "\0" . 'prNotifications', '' . "\0" . 'VtallyBundle\\Entity\\PollingStation' . "\0" . 'paNotifications', '' . "\0" . 'VtallyBundle\\Entity\\PollingStation' . "\0" . 'prVoteCasts', '' . "\0" . 'VtallyBundle\\Entity\\PollingStation' . "\0" . 'paVoteCasts', '' . "\0" . 'VtallyBundle\\Entity\\PollingStation' . "\0" . 'prPinkSheet', '' . "\0" . 'VtallyBundle\\Entity\\PollingStation' . "\0" . 'paPinkSheet', '' . "\0" . 'VtallyBundle\\Entity\\PollingStation' . "\0" . 'returningOfficer'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (PollingStation $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function __toString()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__toString', []);

        return parent::__toString();
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setName($name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setName', [$name]);

        return parent::setName($name);
    }

    /**
     * {@inheritDoc}
     */
    public function getName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', []);

        return parent::getName();
    }

    /**
     * {@inheritDoc}
     */
    public function setCode($code)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCode', [$code]);

        return parent::setCode($code);
    }

    /**
     * {@inheritDoc}
     */
    public function getCode()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCode', []);

        return parent::getCode();
    }

    /**
     * {@inheritDoc}
     */
    public function setDistrict($district)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDistrict', [$district]);

        return parent::setDistrict($district);
    }

    /**
     * {@inheritDoc}
     */
    public function getDistrict()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDistrict', []);

        return parent::getDistrict();
    }

    /**
     * {@inheritDoc}
     */
    public function setConstituency(\VtallyBundle\Entity\Constituency $constituency)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setConstituency', [$constituency]);

        return parent::setConstituency($constituency);
    }

    /**
     * {@inheritDoc}
     */
    public function getConstituency()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getConstituency', []);

        return parent::getConstituency();
    }

    /**
     * {@inheritDoc}
     */
    public function addPrVoteCast(\PrBundle\Entity\PrVoteCast $prVoteCast)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addPrVoteCast', [$prVoteCast]);

        return parent::addPrVoteCast($prVoteCast);
    }

    /**
     * {@inheritDoc}
     */
    public function removePrVoteCast(\PrBundle\Entity\PrVoteCast $prVoteCast)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removePrVoteCast', [$prVoteCast]);

        return parent::removePrVoteCast($prVoteCast);
    }

    /**
     * {@inheritDoc}
     */
    public function getPrVoteCasts()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPrVoteCasts', []);

        return parent::getPrVoteCasts();
    }

    /**
     * {@inheritDoc}
     */
    public function addPaVoteCast(\PaBundle\Entity\PaVoteCast $paVoteCast)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addPaVoteCast', [$paVoteCast]);

        return parent::addPaVoteCast($paVoteCast);
    }

    /**
     * {@inheritDoc}
     */
    public function removePaVoteCast(\PaBundle\Entity\PaVoteCast $paVoteCast)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removePaVoteCast', [$paVoteCast]);

        return parent::removePaVoteCast($paVoteCast);
    }

    /**
     * {@inheritDoc}
     */
    public function getPaVoteCasts()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPaVoteCasts', []);

        return parent::getPaVoteCasts();
    }

    /**
     * {@inheritDoc}
     */
    public function addPrNotification(\PrBundle\Entity\PrNotification $prNotification)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addPrNotification', [$prNotification]);

        return parent::addPrNotification($prNotification);
    }

    /**
     * {@inheritDoc}
     */
    public function removePrNotification(\PrBundle\Entity\PrNotification $prNotification)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removePrNotification', [$prNotification]);

        return parent::removePrNotification($prNotification);
    }

    /**
     * {@inheritDoc}
     */
    public function getPrNotifications()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPrNotifications', []);

        return parent::getPrNotifications();
    }

    /**
     * {@inheritDoc}
     */
    public function addPaNotification(\PaBundle\Entity\PaNotification $paNotification)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addPaNotification', [$paNotification]);

        return parent::addPaNotification($paNotification);
    }

    /**
     * {@inheritDoc}
     */
    public function removePaNotification(\PaBundle\Entity\PaNotification $paNotification)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removePaNotification', [$paNotification]);

        return parent::removePaNotification($paNotification);
    }

    /**
     * {@inheritDoc}
     */
    public function getPaNotifications()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPaNotifications', []);

        return parent::getPaNotifications();
    }

    /**
     * {@inheritDoc}
     */
    public function setPrPinkSheet(\PrBundle\Entity\PrPinkSheet $prPinkSheet = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPrPinkSheet', [$prPinkSheet]);

        return parent::setPrPinkSheet($prPinkSheet);
    }

    /**
     * {@inheritDoc}
     */
    public function getPrPinkSheet()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPrPinkSheet', []);

        return parent::getPrPinkSheet();
    }

    /**
     * {@inheritDoc}
     */
    public function setReturningOfficer(\VtallyBundle\Entity\ReturningOfficer $returningOfficer = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setReturningOfficer', [$returningOfficer]);

        return parent::setReturningOfficer($returningOfficer);
    }

    /**
     * {@inheritDoc}
     */
    public function getReturningOfficer()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getReturningOfficer', []);

        return parent::getReturningOfficer();
    }

    /**
     * {@inheritDoc}
     */
    public function setPaPinkSheet(\PaBundle\Entity\PaPinkSheet $paPinkSheet = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPaPinkSheet', [$paPinkSheet]);

        return parent::setPaPinkSheet($paPinkSheet);
    }

    /**
     * {@inheritDoc}
     */
    public function getPaPinkSheet()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPaPinkSheet', []);

        return parent::getPaPinkSheet();
    }

    /**
     * {@inheritDoc}
     */
    public function setActive($active)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setActive', [$active]);

        return parent::setActive($active);
    }

    /**
     * {@inheritDoc}
     */
    public function getActive()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getActive', []);

        return parent::getActive();
    }

}
